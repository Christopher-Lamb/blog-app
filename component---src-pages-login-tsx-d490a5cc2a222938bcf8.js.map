{"version":3,"file":"component---src-pages-login-tsx-d490a5cc2a222938bcf8.js","mappings":"2OAYA,MAVmEA,IACjE,MAAM,UAAEC,EAAS,SAAEC,KAAaC,GAAeH,EAE/C,OACEI,EAAAA,cAAA,OAAAC,OAAAC,OAAA,CAAML,UAAW,UAAYA,GAAeE,GACzCD,EACI,ECEX,MANqCF,IACnC,MAAM,UAAEC,KAAcE,GAAeH,EAErC,OAAOI,EAAAA,cAAA,QAAAC,OAAAC,OAAA,CAAOL,UAAW,2CAA6CA,GAAeE,GAAoB,ECM3G,MATuCH,IACrC,MAAM,UAAEC,EAAS,SAAEC,KAAaC,GAAeH,EAC/C,OACEI,EAAAA,cAAA,SAAAC,OAAAC,OAAA,CAAQC,KAAK,SAASN,UAAW,IAAMA,GAAeE,GACnDD,EACM,ECQb,MAXqCF,IACnC,MAAM,UAAEC,EAAS,SAAEC,EAAQ,MAAEM,KAAUL,GAAeH,EAEtD,OACEI,EAAAA,cAAA,OAAKH,UAAW,wBAA0BA,GACxCG,EAAAA,cAAA,QAAAC,OAAAC,OAAA,CAAOL,UAAU,QAAWE,GAAaK,GACxCN,EACG,C,iICyDV,UAtDuCO,KACrC,MAAM,mBAAEC,EAAkB,aAAEC,IAAiBC,EAAAA,EAAAA,KA+B7C,OACER,EAAAA,cAAA,YACEA,EAAAA,cAACS,EAAAA,GAAM,MAEPT,EAAAA,cAACU,EAAAA,GAAI,CAACC,SA7BWC,UACnBC,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAEhC,IAAIC,EAA+B,CAAC,EAUpC,GARAH,EAASI,SAAQ,CAACC,EAAOC,KAEF,iBAAVD,IACTF,EAAQG,GAA2BD,EACrC,IApBG,eADaE,EAyBDJ,IAxBW,aAAcI,GAAiC,iBAAnBA,EAAIC,YAAmD,iBAAjBD,EAAIE,SAwBvE,CAEV,YADMC,EAAAA,EAAAA,IAAUP,IACTX,GACpBA,GAEJ,CA9BJ,IAAsBe,CAgChB,EAQ8BzB,UAAU,wJACtCG,EAAAA,cAAA,MAAIH,UAAU,sBAAqB,SACnCG,EAAAA,cAAC0B,EAAAA,GAAK,CAACtB,MAAM,oBAAoBuB,QAAQ,cACvC3B,EAAAA,cAAC4B,EAAAA,GAAK,CAACzB,KAAK,OAAO0B,KAAK,aAAaC,YAAY,uBAGnD9B,EAAAA,cAAC0B,EAAAA,GAAK,CAACtB,MAAM,WAAWuB,QAAQ,YAC9B3B,EAAAA,cAAC4B,EAAAA,GAAK,CAACzB,KAAK,WAAW0B,KAAK,WAAWC,YAAY,cAErD9B,EAAAA,cAAC+B,EAAAA,GAAM,CAAClC,UAAU,mBAAkB,SACpCG,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAG,YACPjC,EAAAA,cAAA,QAAMH,UAAU,qDAAoD,aAGnE,EAMJ,MAAMqC,EAAeA,IAAMlC,EAAAA,cAAA,aAAO,0B","sources":["webpack://my-gatsby-site/./src/components/Form/Form.tsx","webpack://my-gatsby-site/./src/components/Form/Input.tsx","webpack://my-gatsby-site/./src/components/Form/Button.tsx","webpack://my-gatsby-site/./src/components/Form/Label.tsx","webpack://my-gatsby-site/./src/pages/login.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Form: React.FC<React.FormHTMLAttributes<HTMLFormElement>> = (props) => {\n  const { className, children, ...otherProps } = props;\n\n  return (\n    <form className={\"w-full \" + className} {...otherProps}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input: React.FC<InputProps> = (props) => {\n  const { className, ...otherProps } = props;\n\n  return <input className={\"h-small p-2xsmall border border-primary \" + className} {...otherProps}></input>;\n};\n\nexport default Input;\n","import React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const { className, children, ...otherProps } = props;\n  return (\n    <button type=\"submit\" className={\" \" + className} {...otherProps}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\ninterface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  label: string;\n}\n\nconst Label: React.FC<LabelProps> = (props) => {\n  const { className, children, label, ...otherProps } = props;\n\n  return (\n    <div className={\"w-full flex flex-col \" + className}>\n      <label className=\"jost\" {...otherProps}>{label}</label>\n      {children}\n    </div>\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport { Link, type HeadFC, type PageProps } from \"gatsby\";\nimport { Navbar } from \"../components\";\nimport { Form, Input, Label, Button } from \"../components/Form\";\nimport { loginUser, getUser } from \"../utils/userAPI\";\nimport { useAuthContext } from \"../context/AuthContext\";\n\ninterface LoginProps {\n  identifier: string;\n  password: string;\n}\n\nfunction isLoginProps(obj: Partial<LoginProps>): obj is LoginProps {\n  return \"identifier\" in obj && \"password\" in obj && typeof obj.identifier === \"string\" && typeof obj.password === \"string\";\n}\n\nconst LoginPage: React.FC<PageProps> = () => {\n  const { checkAuthenticated, loginSuccess } = useAuthContext();\n\n  const handleAuthBtn = () => {\n    if (checkAuthenticated) checkAuthenticated();\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n\n    let formObj: Partial<LoginProps> = {};\n\n    formData.forEach((value, key) => {\n      // Ensure that the key is actually a key of LoginProps\n      if (typeof value === \"string\") {\n        formObj[key as keyof LoginProps] = value;\n      }\n    });\n\n    // Ensure all fields are present\n    if (isLoginProps(formObj)) {\n      const status = await loginUser(formObj);\n      if (status === 200 && loginSuccess) {\n        loginSuccess();\n      }\n    } else {\n      // console.error(\"Form is incomplete\", formObj);\n      // Handle incomplete form case (e.g., display a message to the user)\n    }\n  };\n\n  return (\n    <main>\n      <Navbar />\n\n      <Form onSubmit={handleSubmit} className=\"grid gap-2xsmall p-2xsmall py-small sm:p-small md:p-med container xl:max-w-four mx-auto min-h-three bg-white text-black border border-primary mt-med\">\n        <h3 className=\"text-medlarge jost\">Login</h3>\n        <Label label=\"Username or Email\" htmlFor=\"identifier\">\n          <Input type=\"text\" name=\"identifier\" placeholder=\"Username or Email\" />\n        </Label>\n        {/* Password */}\n        <Label label=\"Password\" htmlFor=\"password\">\n          <Input type=\"password\" name=\"password\" placeholder=\"Password\" />\n        </Label>\n        <Button className=\"h-small primary\">Login</Button>\n        <Link to=\"/sign-up\">\n          <span className=\"text-blue-500 hover:underline hover:text-blue-400\">Sign Up</span>\n        </Link>\n      </Form>\n    </main>\n  );\n};\n\nexport default LoginPage;\n\nexport const Head: HeadFC = () => <title>The Public Post | Login</title>;\n"],"names":["props","className","children","otherProps","React","Object","assign","type","label","LoginPage","checkAuthenticated","loginSuccess","useAuthContext","Navbar","Form","onSubmit","async","e","preventDefault","formData","FormData","currentTarget","formObj","forEach","value","key","obj","identifier","password","loginUser","Label","htmlFor","Input","name","placeholder","Button","Link","to","Head"],"sourceRoot":""}