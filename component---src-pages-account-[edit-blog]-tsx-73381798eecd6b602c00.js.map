{"version":3,"file":"component---src-pages-account-[edit-blog]-tsx-73381798eecd6b602c00.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/pages/account/[edit-blog].tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, ChangeEvent, TextareaHTMLAttributes } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Authenticated, Navbar, DynamicText, Footer, ContentSelector, ImgItem, SaveButton, Thumbnail, BlogBox, SingleAccordion } from \"../../components\";\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"react-beautiful-dnd\";\nimport { MdDragHandle } from \"react-icons/md\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { generateUID, moveItemDND, h1Content } from \"../../utils\";\nimport { getDraftBySlug, updateDraftBySlug, updateSlugBySlug } from \"../../utils/blogAPI\";\nimport { useUserContext } from \"../../context/UserContext\";\nimport { Helmet } from \"react-helmet\";\n\ninterface BlogItem {\n  _id: string;\n  type: string;\n  content?: string;\n  position?: number;\n  src?: string | ArrayBuffer;\n}\n\ntype PlaceholderMap = {\n  [key: string]: string;\n};\n\nconst placeholderMap: PlaceholderMap = {\n  h2: \"subheading\",\n  p: \"paragraph\",\n};\n\nconst elementMap: PlaceholderMap = {\n  title: \"h1\",\n  subtitle: \"span\",\n  paragraph: \"p\",\n  subheading: \"h2\",\n  image: \"img\",\n};\n\nconst CreateBlogContent = (props: PageProps) => {\n  const [blogItems, setBlogItems] = useState<Record<string, BlogItem>>({});\n  const [blogItemIds, setBlogItemIds] = useState<string[]>([]);\n  const { userObj } = useUserContext();\n  const initalObjRef = useRef<Record<string, BlogItem>>({});\n  const slug =\n    typeof window !== \"undefined\"\n      ? window.location.pathname\n          .split(\"/\")\n          .filter((i) => i)\n          .pop() || \"\"\n      : \"\";\n  const [slugState, setSlugState] = useState(slug);\n\n  // INIT\n  useEffect(() => {\n    const initBlog = async () => {\n      const { draft }: { draft: BlogItem[] } = await getDraftBySlug(slug);\n      // console.log({ draft });\n      // Get the position of the body items where they have a position and then order the position and return only the ids\n      const ids = draft\n        .filter((draftItem): draftItem is BlogItem & { position: number } => draftItem.position !== undefined)\n        .sort((a, b) => a.position - b.position)\n        .map((item) => item._id);\n\n      setBlogItemIds(ids);\n\n      let mappedBlogItems: Record<string, BlogItem> = {};\n      draft.forEach((item) => {\n        if ([\"title\", \"subtitle\", \"description\", \"thumbnail\"].includes(item.type)) {\n          mappedBlogItems[item.type] = item;\n        } else {\n          mappedBlogItems[item._id] = item;\n        }\n      });\n      setBlogItems(mappedBlogItems);\n      initalObjRef.current = mappedBlogItems;\n      // console.log({ blogItemIds, blogItems, initalObjRef });\n    };\n    initBlog();\n  }, []);\n\n  // BEAUTIFUL DND\n  const handleDragEnd = (result: DropResult) => {\n    const newArr = moveItemDND(blogItemIds, result);\n    if (newArr) {\n      setBlogItemIds(newArr);\n      // updateTodoPosition(newArr, \"mainIds\");\n    }\n  };\n\n  //\n  // UI UPDATES\n  //\n  const handleAddBlogItem = (type: string) => {\n    const uid = \"blogitem-\" + generateUID();\n    setBlogItemIds((prevIds) => [...prevIds, uid]);\n    if (type === \"img\") {\n      setBlogItems((prevItems) => ({ ...prevItems, [uid]: { _id: uid, type: \"image\", src: \"\", content: `<label></label>` } }));\n    } else if (type === \"title\") {\n    } else {\n      initalObjRef.current = { ...initalObjRef.current, [uid]: { _id: uid, type: type, content: `` } };\n      setBlogItems((prevItems) => ({ ...prevItems, [uid]: { _id: uid, type: placeholderMap[type], content: `` } }));\n    }\n  };\n\n  const handleDelete = (delId: string) => {\n    const objStore = JSON.parse(JSON.stringify(blogItems));\n    delete objStore[delId];\n    setBlogItems(objStore);\n    setBlogItemIds((prevIds) => prevIds.filter((id) => id !== delId));\n  };\n\n  const handleTextChange = (id: string, text: string) => {\n    setBlogItems((prevItems) => ({\n      ...prevItems,\n      [id]: { ...prevItems[id], content: text },\n    }));\n  };\n\n  const handleImgChange = (id: string, file: string | ArrayBuffer, text?: string) => {\n    let imageObj = text ? { src: file, content: text } : { src: file, content: \"\" };\n\n    setBlogItems((prevItems) => ({ ...prevItems, [id]: { ...prevItems[id], ...imageObj } }));\n  };\n\n  //\n  // HANDLE AXIOS SAVING\n  //\n  const handleSave = async () => {\n    //Copy the blogItems as to not alter state directly\n    let workingStore = JSON.parse(JSON.stringify(blogItems));\n\n    // Enumerate the position of each item that can be drag and dropped\n    blogItemIds.forEach((item, i) => {\n      workingStore[item] = { ...workingStore[item], position: i };\n    });\n\n    //Remove the id from the store as to not cause conflict with mongoose\n    const blogItemsArray = Object.keys(workingStore).map((key) => {\n      const { _id, ...rest } = workingStore[key];\n      if (_id.split(\"-\")[0] === \"blogitem\") {\n        return rest;\n      } else {\n        return workingStore[key];\n      }\n    });\n\n    //arr.filter((item)=> item.type !== 1) this will remove all items that equall one because it filters out every false\n    //Send the objects to the backend\n    const imgsUploaded: { position: number; src: string; type: string }[] = await updateDraftBySlug(slug, blogItemsArray);\n    // AXIOS is returning the positions we hav uploaded images along with the new url associated with that image\n    imgsUploaded.forEach((imgObj) => {\n      //get id at index then update the src with the new url at the targetId\n      if (imgObj.type === \"image\") {\n        const targetId = blogItemIds[imgObj.position];\n        setBlogItems((prevItems) => ({ ...prevItems, [targetId]: { ...prevItems[targetId], src: imgObj.src } }));\n      } else if (imgObj.type === \"thumbnail\") {\n        setBlogItems((prevItems) => ({ ...prevItems, thumbnail: { ...prevItems[\"thumbnail\"], src: imgObj.src } }));\n      }\n    });\n\n    // Handle if slug has changed\n    if (slug !== slugState) {\n      const newSlug = await updateSlugBySlug(slug, slugState);\n      typeof window !== \"undefined\" && window.location.replace(\"/account/\" + newSlug);\n    }\n  };\n\n  const handleSlugChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let string = e.target.value;\n    // Get rid of spaces and special characters\n    string = string.replace(/(\\s+)|(-+)/g, \"-\");\n    string = string.replace(/[^a-zA-Z0-9-]/g, \"\");\n    string = string.replace(/(\\s+)|(-+)/g, \"-\");\n    string = string.replace(/^[-]+|[-]+$/g, \"\");\n    string = string.slice(0, 70).toLowerCase();\n    setSlugState(string);\n  };\n\n  const formattedCurrentDate = new Date().toLocaleDateString(\"en-US\", {\n    weekday: \"short\", // abbreviated day of the week\n    year: \"numeric\", // numeric year\n    month: \"short\", // abbreviated month name\n    day: \"numeric\", // numeric day of the month\n  });\n\n  //\n\n  return (\n    <main>\n      <Helmet>\n        <title>{h1Content(blogItems[\"title\"]?.content || \"\")} The Public Post</title>\n      </Helmet>\n      <Navbar />\n      <DragDropContext onDragEnd={handleDragEnd}>\n        <div className=\"flex justify-end mx-auto max-w-five\">\n          <div className=\"flex flex-col md:flex-row items-center gap-small\">\n            <SaveButton onSave={handleSave} />\n          </div>\n        </div>\n        <div className=\"flex flex-col items-start blog mt-med container mx-auto px-4 md:px-0 max-w-four min-h-[80vh]\">\n          {blogItems[\"title\"] && (\n            <>\n              {/* SLUG AND DESCRIPTION */}\n              <SingleAccordion title=\"Url, Description, and Thumbnail\">\n                <div className=\"grid w-full gap-3xsmall max-w-four p-4\">\n                  <div className=\"grid\">\n                    <label className=\"text-med w-fit\" style={{ borderBottom: \"2px solid rgba(0,0,0,.2)\" }}>\n                      Slug or Url Path\n                    </label>\n                    <input className=\"p-3xsmall w-full text-small18 border\" onChange={handleSlugChange} defaultValue={slugState}></input>\n                    <span className=\"p-3xsmall\">slug preview: /{slugState}/</span>\n                  </div>\n                  <div className=\"grid\">\n                    <label className=\"text-med w-fit\" style={{ borderBottom: \"2px solid rgba(0,0,0,.2)\" }}>\n                      Brief Description\n                    </label>\n                    <textarea\n                      maxLength={300}\n                      onChange={(e) => handleTextChange(\"description\", e.target.value)}\n                      className=\"h-[100px] resize-none w-full p-3xsmall border\"\n                      defaultValue={initalObjRef.current[\"description\"].content}\n                    />\n                  </div>\n                  <div className=\"max-w-three w-full\">\n                    <label className=\"text-med\">Thumbnail:</label>\n                    <Thumbnail handleChange={(file) => handleImgChange(\"thumbnail\", file)} src={blogItems[\"thumbnail\"].src} />\n                  </div>\n                </div>\n              </SingleAccordion>\n              {/* <BlogBox /> */}\n              {/* TITLE AND SUBTITLE */}\n              <DynamicText\n                className=\"w-full \"\n                placeholder=\"Headline\"\n                primaryElement={\"h1\"}\n                secondaryElement={\"none\"}\n                onChange={(text) => handleTextChange(\"title\", text)}\n                content={initalObjRef.current[\"title\"].content}\n              ></DynamicText>\n              <DynamicText\n                className=\"w-full\"\n                placeholder=\"Subheadline\"\n                primaryElement={\"span\"}\n                id=\"subtitle\"\n                secondaryElement={\"none\"}\n                onChange={(text) => handleTextChange(\"subtitle\", text)}\n                content={initalObjRef.current[\"subtitle\"].content}\n              ></DynamicText>\n              <span id=\"author\">Written by {userObj?.username}</span>\n              <span id=\"date\">{formattedCurrentDate}</span>\n            </>\n          )}\n          {/* RENDER ALL Draggable Components */}\n          <Droppable droppableId=\"main\">\n            {(provided, snapshot) => (\n              <div className=\"borderl w-full\" ref={provided.innerRef} {...provided.droppableProps}>\n                {blogItemIds.map((itemId, i) => (\n                  <DragWrapper id={itemId} index={i} key={itemId} type={blogItems[itemId].type} onDelete={handleDelete}>\n                    {blogItems[itemId].type === \"image\" ? (\n                      <ImgItem index={i} handleChange={(file, text) => handleImgChange(itemId, file, text)} content={blogItems[itemId].content} src={blogItems[itemId].src} />\n                    ) : (\n                      <DynamicText\n                        className=\"w-full h-fit\"\n                        primaryElement={elementMap[blogItems[itemId].type]}\n                        secondaryElement={blogItems[itemId].type === \"paragraph\" ? \"p\" : \"none\"}\n                        onChange={(text) => {\n                          // console.log(itemId);\n                          handleTextChange(itemId, text);\n                        }}\n                        placeholder={placeholderMap[blogItems[itemId].type]}\n                        content={initalObjRef.current[itemId].content}\n                      ></DynamicText>\n                    )}\n                  </DragWrapper>\n                ))}\n\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n\n          <ContentSelector className=\"mt-3xsmall\" onClick={handleAddBlogItem} />\n        </div>\n      </DragDropContext>\n      {/* <Footer className=\"mt-large\" /> */}\n    </main>\n  );\n};\n\ninterface DragWrapperProps {\n  id: string;\n  index: number;\n  children?: React.ReactNode;\n  type?: string;\n  onDelete: (delId: string) => void;\n  className?: string;\n}\n\nconst DragWrapper: React.FC<DragWrapperProps> = ({ id, index, children, type, onDelete, className }) => {\n  let marginTop = \"0\";\n  switch (type) {\n    case \"image\":\n      marginTop = \"my-3\";\n      break;\n    case \"subheading\":\n      marginTop = \"mb-[0.125rem] mt-2\";\n      break;\n    case \"paragraph\":\n      marginTop = \"mb-2\";\n      break;\n  }\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.draggableProps} className={\"flex h-auto relative gap-2s \" + marginTop}>\n          {/* <div className=\"relative h-auto flex justify-center\"></div> */}\n          {children}\n          {type === \"image\" ? (\n            <div className=\"absolute rights-0 flex\">\n              <div className=\"relative primary h-8 w-8 shrink-0 rounded\" {...provided.dragHandleProps}>\n                <MdDragHandle size={\"2rem\"} />\n              </div>\n              <button onClick={() => onDelete(id)} className=\"relative shrink-0 accent h-8 w-8 flex items-center justify-center rounded\">\n                <FaTrash size={\"1rem\"} />\n              </button>\n            </div>\n          ) : (\n            <>\n              <div className=\"relative primary h-8 w-8 shrink-0 rounded\" {...provided.dragHandleProps}>\n                <MdDragHandle size={\"2rem\"} />\n              </div>\n              <button onClick={() => onDelete(id)} className=\"relative shrink-0 accent h-8 w-8 flex items-center justify-center rounded\">\n                <FaTrash size={\"1rem\"} />\n              </button>\n            </>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\n// Now, wrap ProfilePageContent with Authenticated and export this instead\nconst CreateBlogPage = (props: PageProps) => {\n  return <Authenticated WrappedComponent={CreateBlogContent} {...props} />;\n};\n\nexport default CreateBlogPage;\nexport const Head: HeadFC = () => <title>Create Blog</title>;\n"],"names":["placeholderMap","h2","p","elementMap","title","subtitle","paragraph","subheading","image","CreateBlogContent","props","_blogItems$title","blogItems","setBlogItems","useState","blogItemIds","setBlogItemIds","userObj","useUserContext","initalObjRef","useRef","slug","window","location","pathname","split","filter","i","pop","slugState","setSlugState","useEffect","async","draft","getDraftBySlug","ids","draftItem","undefined","position","sort","a","b","map","item","_id","mappedBlogItems","forEach","includes","type","current","initBlog","handleDelete","delId","objStore","JSON","parse","stringify","prevIds","id","handleTextChange","text","prevItems","content","handleImgChange","file","imageObj","src","formattedCurrentDate","Date","toLocaleDateString","weekday","year","month","day","React","Helmet","h1Content","Navbar","DragDropContext","onDragEnd","result","newArr","moveItemDND","className","SaveButton","onSave","workingStore","blogItemsArray","Object","keys","key","rest","updateDraftBySlug","imgObj","targetId","thumbnail","newSlug","updateSlugBySlug","replace","SingleAccordion","style","borderBottom","onChange","e","string","target","value","slice","toLowerCase","defaultValue","maxLength","Thumbnail","handleChange","DynamicText","placeholder","primaryElement","secondaryElement","username","Droppable","droppableId","provided","snapshot","assign","ref","innerRef","droppableProps","itemId","DragWrapper","index","onDelete","ImgItem","ContentSelector","onClick","uid","generateUID","concat","_toConsumableArray","_ref","children","marginTop","Draggable","draggableId","draggableProps","dragHandleProps","MdDragHandle","size","FaTrash","Authenticated","WrappedComponent","Head"],"sourceRoot":""}