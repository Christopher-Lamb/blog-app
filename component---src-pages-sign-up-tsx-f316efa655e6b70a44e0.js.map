{"version":3,"file":"component---src-pages-sign-up-tsx-f316efa655e6b70a44e0.js","mappings":"4OAYA,MAVmEA,IACjE,MAAM,UAAEC,EAAS,SAAEC,KAAaC,GAAeH,EAE/C,OACEI,EAAAA,cAAA,OAAAC,OAAAC,OAAA,CAAML,UAAW,UAAYA,GAAeE,GACzCD,EACI,ECEX,MANqCF,IACnC,MAAM,UAAEC,KAAcE,GAAeH,EAErC,OAAOI,EAAAA,cAAA,QAAAC,OAAAC,OAAA,CAAOL,UAAW,2CAA6CA,GAAeE,GAAoB,ECM3G,MATuCH,IACrC,MAAM,UAAEC,EAAS,SAAEC,KAAaC,GAAeH,EAC/C,OACEI,EAAAA,cAAA,SAAAC,OAAAC,OAAA,CAAQC,KAAK,SAASN,UAAW,IAAMA,GAAeE,GACnDD,EACM,ECQb,MAXqCF,IACnC,MAAM,UAAEC,EAAS,SAAEC,EAAQ,MAAEM,KAAUL,GAAeH,EAEtD,OACEI,EAAAA,cAAA,OAAKH,UAAW,wBAA0BA,GACxCG,EAAAA,cAAA,QAAAC,OAAAC,OAAA,CAAOL,UAAU,QAAWE,GAAaK,GACxCN,EACG,C,6GCiEV,UApDwCO,IAyBpCL,EAAAA,cAAA,YACEA,EAAAA,cAACM,EAAAA,GAAM,MACPN,EAAAA,cAACO,EAAAA,GAAI,CAACC,SA1BWC,UACnBC,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAEhC,IAAIC,EAAgC,CAAC,EAlBzC,IAAuBC,EAoBnBJ,EAASK,SAAQ,CAACC,EAAOC,KAGF,iBAAVD,IACTH,EAAQI,GAA4BD,EACtC,IAvBF,SAFmBF,EA6BDD,IA1BlB,aAAcC,GACd,UAAWA,GACX,aAAcA,GACM,iBAAbA,EAAII,MACa,iBAAjBJ,EAAIK,UACU,iBAAdL,EAAIM,OACa,iBAAjBN,EAAIO,eAqBHC,EAAAA,EAAAA,IAAWT,GAGjBU,QAAQC,MAAM,qBAAsBX,EAEtC,EAKgClB,UAAU,wJACtCG,EAAAA,cAAA,MAAIH,UAAU,sBAAqB,WAEnCG,EAAAA,cAAC2B,EAAAA,GAAK,CAACvB,MAAM,QACXJ,EAAAA,cAAC4B,EAAAA,GAAK,CAACR,KAAK,UAGdpB,EAAAA,cAAC2B,EAAAA,GAAK,CAACvB,MAAM,YACXJ,EAAAA,cAAC4B,EAAAA,GAAK,CAACR,KAAK,cAGdpB,EAAAA,cAAC2B,EAAAA,GAAK,CAACvB,MAAM,SACXJ,EAAAA,cAAC4B,EAAAA,GAAK,CAACR,KAAK,WAIdpB,EAAAA,cAAC2B,EAAAA,GAAK,CAACvB,MAAM,YACXJ,EAAAA,cAAC4B,EAAAA,GAAK,CAACzB,KAAK,WAAWiB,KAAK,cAE9BpB,EAAAA,cAAC6B,EAAAA,GAAM,CAAChC,UAAU,mBAAkB,oBAQrC,MAAMiC,EAAeA,IAAM9B,EAAAA,cAAA,aAAO,4B","sources":["webpack://my-gatsby-site/./src/components/Form/Form.tsx","webpack://my-gatsby-site/./src/components/Form/Input.tsx","webpack://my-gatsby-site/./src/components/Form/Button.tsx","webpack://my-gatsby-site/./src/components/Form/Label.tsx","webpack://my-gatsby-site/./src/pages/sign-up.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Form: React.FC<React.FormHTMLAttributes<HTMLFormElement>> = (props) => {\n  const { className, children, ...otherProps } = props;\n\n  return (\n    <form className={\"w-full \" + className} {...otherProps}>\n      {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\ninterface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input: React.FC<InputProps> = (props) => {\n  const { className, ...otherProps } = props;\n\n  return <input className={\"h-small p-2xsmall border border-primary \" + className} {...otherProps}></input>;\n};\n\nexport default Input;\n","import React from \"react\";\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {}\n\nconst Button: React.FC<ButtonProps> = (props) => {\n  const { className, children, ...otherProps } = props;\n  return (\n    <button type=\"submit\" className={\" \" + className} {...otherProps}>\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\ninterface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {\n  label: string;\n}\n\nconst Label: React.FC<LabelProps> = (props) => {\n  const { className, children, label, ...otherProps } = props;\n\n  return (\n    <div className={\"w-full flex flex-col \" + className}>\n      <label className=\"jost\" {...otherProps}>{label}</label>\n      {children}\n    </div>\n  );\n};\n\nexport default Label;\n","import React, { FormEvent } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Navbar } from \"../components\";\nimport { Form, Input, Label, Button } from \"../components/Form\";\nimport { signupUser } from \"../utils/userAPI\";\n\ninterface SignupProps {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n}\n\nfunction isSignupProps(obj: Partial<SignupProps>): obj is SignupProps {\n  return (\n    \"name\" in obj &&\n    \"username\" in obj &&\n    \"email\" in obj &&\n    \"password\" in obj &&\n    typeof obj.name === \"string\" &&\n    typeof obj.username === \"string\" &&\n    typeof obj.email === \"string\" &&\n    typeof obj.password === \"string\"\n  );\n}\n\nconst SignUpPage: React.FC<PageProps> = () => {\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n\n    let formObj: Partial<SignupProps> = {};\n\n    formData.forEach((value, key) => {\n      // console.log({ key, value });\n      // Ensure that the key is actually a key of SignupProps\n      if (typeof value === \"string\") {\n        formObj[key as keyof SignupProps] = value;\n      }\n    });\n\n    // Ensure all fields are present\n    if (isSignupProps(formObj)) {\n      await signupUser(formObj);\n      // console.log(formObj);\n    } else {\n      console.error(\"Form is incomplete\", formObj);\n      // Handle incomplete form case (e.g., display a message to the user)\n    }\n  };\n  return (\n    <main>\n      <Navbar />\n      <Form onSubmit={handleSubmit} className=\"grid gap-2xsmall p-2xsmall py-small sm:p-small md:p-med container xl:max-w-four mx-auto min-h-three bg-white text-black border border-primary mt-med\">\n        <h3 className=\"text-medlarge jost\">Sign Up</h3>\n        {/* Name */}\n        <Label label=\"Name\">\n          <Input name=\"name\" />\n        </Label>\n        {/* Username */}\n        <Label label=\"Username\">\n          <Input name=\"username\" />\n        </Label>\n        {/* Email */}\n        <Label label=\"Email\">\n          <Input name=\"email\" />\n        </Label>\n\n        {/* Password */}\n        <Label label=\"Password\">\n          <Input type=\"password\" name=\"password\" />\n        </Label>\n        <Button className=\"h-small primary\">Create Account</Button>\n      </Form>\n    </main>\n  );\n};\n\nexport default SignUpPage;\n\nexport const Head: HeadFC = () => <title>The Public Post | Sign Up</title>;\n"],"names":["props","className","children","otherProps","React","Object","assign","type","label","SignUpPage","Navbar","Form","onSubmit","async","e","preventDefault","formData","FormData","currentTarget","formObj","obj","forEach","value","key","name","username","email","password","signupUser","console","error","Label","Input","Button","Head"],"sourceRoot":""}